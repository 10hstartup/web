<%- include('blocks/header') %>
    <div class="container"></div>
    <div class="container mt-2">
      <div><h1 id="reqid"></h1>
      <p id="prof-link-author"></p>
      <div class="container">
        <div class="row">
          <div class="col-md-6">
            <form id="req">
              <div class="form-group">
                <label for="item">Item</label>
                <input type="text" class="form-control" id="item" value="Loading..." readonly>
              </div>
              <div class="form-group">
                <label for="author">Author</label>
                <input type="text" class="form-control" id="author" value="Loading..." readonly>
              </div>
              <div class="form-group">
                <label for="date">Date</label>
                <input type="text" class="form-control" id="date" value="Loading..." readonly>
              </div>
              <div class="form-group">
                <label for="location">Dropoff Address</label>
                <input type="text" class="form-control" id="location" value="Loading..." readonly>
              </div>
              <div class="form-group">
                <label for="quantity">Quantity</label>
                <input type="number" class="form-control" id="quantity" value="Loading..." readonly>
              </div>
            </form>
          </div>
          <div class="col-md-6">
            <div class="card h-100" style="border: 0px solid #666">
              <div class="card-body">
                <h4 class="card-title" style="font-weight:700">Dropoff Location</h4>
                <div id="map"></div>
                <small>Your distance from the dropoff location is <a id="distance">0km</a>, or around a <a id="time">0min</a> drive.</small>
              </div>
            </div>
          </div>
        </div>
    </div>
    </div>
      </form><br>
      <h1>
        Fulfillment Process
      </h1>
      <p style="font-size: 120%;">All the information provided here is extremely important.<img src="/img/signin.jpg" width="100%" style="border: 2px solid #6C63FF; margin-top: 1vw;"></p>
      <h1 style="font-size: 170%;">
        How to Comment
      </h1>
      <p style="font-size: 120%; padding-left: 2vw">
        1. Copy and Paste the link below into your comment.<br>
        <input type="text" class="form-control" id="prof-link" value="Loading..." readonly>
        2. Write what <b>date and time</b> you can drop off the resources.<br>
        3. Add any <b>optional/alternative</b> ways to obtain requested resources.
      </p>
      <h1 style="font-size: 170%;">
        How to Sign Up to Disqus
      </h1>
      <i>Note: We use Disqus because many other Coronavirus websites use it, allowing you to have seamless integration with other websites.</i><br>
      <p style="font-size: 120%; padding-left: 2vw; margin-top: 0.7vw">
        1. <b>Sign up</b> to Disqus using integration or manual sign up.<br>
        2. <b>Enter details</b> Disqus requests you to enter.<br>
        3. If you manually signed in, verify your email. <i>Does <b>not</b> apply with integration sign in.</i><br>
        4. Click <b>proceed</b> to the "Important Update" message.<br>
        5. <b>Post</b> your comment.
      </p>
      <div id="disqus_thread"></div>
  <script defer>
    let address;
    let homeAddress;
    let coordArray = [];

    function distance(lat1, lon1, lat2, lon2) {
      const R = 6371; // km (change this constant to get miles)
      const dLat = ((lat2 - lat1) * Math.PI) / 180;
      const dLon = ((lon2 - lon1) * Math.PI) / 180;
      const a =
        Math.sin(dLat / 2) * Math.sin(dLat / 2) +
        Math.cos((lat1 * Math.PI) / 180) *
          Math.cos((lat2 * Math.PI) / 180) *
          Math.sin(dLon / 2) *
          Math.sin(dLon / 2);
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      const d = R * c;
      if (d > 1) return `${Math.round(d)}km`;
      else if (d <= 1) return `${Math.round(d * 1000)}m`;
      return d;
    }

    function initService() {
      let count = 0;
      function parse(predictions, status) {
        
        if (status != google.maps.places.PlacesServiceStatus.OK) {
          alert(status);
          return;
        }
        ++count;
        if (count === 2) address = predictions[0].description;
        else homeAddress = predictions[0].description;
        if (homeAddress && address) initMap();
      };

      const service = new google.maps.places.AutocompleteService();
      service.getQueryPredictions({ input: document.querySelector('#location').value }, parse);
      service.getQueryPredictions({ input: localStorage.getItem('location') }, parse);
    }

    function initMap() { 
      let options = {
        zoom: 15, 
        center: {
          lat: 0, 
          lng: 0
        },
        disableDefaultUI: true,
      }
      let map = new google.maps.Map(document.getElementById('map'), options);
      let geocoder = new google.maps.Geocoder();
      geocodeAddress(geocoder, map, homeAddress, false);
      geocodeAddress(geocoder, map, address);
    }

    let coordCalcCount = 0;
    async function geocodeAddress(geocoder, resultsMap, address, toggle = true) {
      geocoder.geocode({ address }, (results, status) => {
        if (status === 'OK') {
          coordArray.push([ 
            results[0].geometry.location.lat(), results[0].geometry.location.lng()
          ]);
          ++coordCalcCount;
          if (toggle) return;
          resultsMap.setCenter(results[0].geometry.location);
          let marker = new google.maps.Marker({
            map: resultsMap,
            position: results[0].geometry.location
          });
          // let circle = new google.maps.Circle({
          //   center: results[0].geometry.location,
          //   map: resultsMap,
          //   radius: 100, 
          //   fillColor: '#6c63ff',
          //   fillOpacity: 0.3,
          //   strokeColor: '#6c63ff',
          //   strokeWeight: 1  
          // });
          // circle.bindTo('center', marker, 'position');
          if (coordCalcCount === 2) {
            const dist = distance(coordArray[0][0], coordArray[0][1], coordArray[1][0], coordArray[1][1]);
            document.querySelector('#time').innerText = `${Math.round(parseInt(dist.replace(/[^0-9a-z-A-Z ]/g, '').replace(/ +/, ' ')) / 50 * 60)}min`;
            document.querySelector('#distance').innerText = dist;
          }
        } else {
          alert(status);
        }
      });
    }
  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBh2J9GP72NGMhCWCUwHH3togISxVR8DG4&libraries=geometry,places"></script>
    <script>
      var disqus_config = function () {
        this.page.url = window.location.href; 
        this.page.identifier = (new URLSearchParams(window.location.search)).get('id');
        this.callbacks.onNewComment = [function(comment) {
          console.log(comment.id);
          console.log(comment.text);
          fetch(`${window.location.origin}/v1/offer/increment?id=${ID}`)
        }];
      };

      (function() { // DON'T EDIT BELOW THIS LINE
      var d = document, s = d.createElement('script');
      s.src = 'https://corona-4.disqus.com/embed.js';
      s.setAttribute('data-timestamp', +new Date());
      (d.head || d.body).appendChild(s);
      })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
                                
    </div>
  </div><br>
  <%- include('blocks/footer') %>
  <script id="dsq-count-scr" src="//corona-4.disqus.com/count.js" async></script>
  <script src="/js/request.js" defer></script>
</body>
</html>
