<%- include('blocks/header') %>
    <div class="container"></div>
    <div class="container mt-2">
      <h1><i class="fas fa-box-open"></i> Create a Submission</h1>
      <p style="font-size: 120%;" id="counter"><a>Loading...</a> and counting submissions!</p>
      <form id="offers" onsubmit="return false;">
        <input type="hidden" name="_csrf" id="csrf" value="<%= csrfToken %>">
        <div class="form-group">
          <label for="title">Item</label>
          <input type="text" class="form-control" id="title" placeholder="Enter Item Name" maxlength="30" required>
        </div>
        <div class="form-group">
          <label for="location">Dropoff Address</label>
          <input onFocus="geolocate()" type="text" class="form-control" id="location" placeholder="Enter Dropoff Address" maxlength="40" required>
        </div>
        <div class="form-group">
          <label for="tags">Quantity</label>
          <input maxlength="7" min="1" max="1000000" type="number" class="form-control" id="tags" placeholder="Enter Quantity of Item" maxlength="10" required>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" name="exampleRadios" id="request-radio" value="option1" checked>
          <label class="form-check-label" for="request-radio">
            I am requesting resources
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" name="exampleRadios" id="offer-radio" value="option2">
          <label class="form-check-label" for="offer-radio">
            I am offering resources
          </label>
        </div><br>
        <div class="g-recaptcha" data-sitekey="6LepN-MUAAAAAIaZKV-BSSEm-krAwdDo3jzZP53t" data-callback="enable"></div><br>
        <button type="submit" class="btn btn-primary" id="submission-button" disabled><i class="fas fa-paper-plane" style="color: #fff !important"></i> Submit</button>
      </form>
    </div>
  </div><br>
  <%- include('blocks/footer') %>
  <script>
    let placeSearch, autocomplete;
    
    let componentForm = {
      street_number: 'short_name',
      route: 'long_name',
      locality: 'long_name',
      administrative_area_level_1: 'short_name',
      country: 'long_name',
      postal_code: 'short_name'
    };
    
    function initAutocomplete() {
      autocomplete = new google.maps.places.Autocomplete(
          document.getElementById('location'), {types: ['geocode']});
      autocomplete.setFields(['address_component']);
      autocomplete.addListener('place_changed', fillInAddress);
    }
    
    function fillInAddress() {
      let place = autocomplete.getPlace();
    
      /*for (let component in componentForm) {
        document.getElementById(component).value = '';
        document.getElementById(component).disabled = false;
      }
    
      for (let i = 0; i < place.address_components.length; i++) {
        let addressType = place.address_components[i].types[0];
        if (componentForm[addressType]) {
          let val = place.address_components[i][componentForm[addressType]];
          document.getElementById(addressType).value = val;
        }
      }*/
    }
    
    function geolocate() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition((position) => {
          let geolocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          let circle = new google.maps.Circle(
              {center: geolocation, radius: position.coords.accuracy});
        });
      }
    }
  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBh2J9GP72NGMhCWCUwHH3togISxVR8DG4&libraries=places&callback=initAutocomplete"></script>
  <script src="./js/offers.js" defer></script>
  </body>
</html>

